apply plugin: 'com.android.application'
//apply plugin: 'com.google.firebase.firebase-perf'
apply from: '../base_module.gradle'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

android {

    defaultConfig {
        applicationId "dev.olog.msc"
    }

    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField 'String', "LAST_FM_KEY", localProperties.last_fm_key
            buildConfigField 'String', "LAST_FM_SECRET", localProperties.last_fm_secret
        }
        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField 'String', "LAST_FM_KEY", localProperties.last_fm_key
            buildConfigField 'String', "LAST_FM_SECRET", localProperties.last_fm_secret
        }
    }


    lintOptions {
        checkReleaseBuilds false
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude 'META-INF/core.kotlin_module'
    }

}

dependencies {
    implementation project(':app-shortcuts')
    implementation project(':analytics')
    implementation project(':core')
    implementation project(':data')
    implementation project(':image-provider')
    implementation project(':injection')
    implementation project(':media')
    implementation project(':prefs-keys')
    implementation project(':presentation')
    implementation project(':shared-android')
    implementation project(':shared-widgets')
    implementation project(':service-music')
    implementation project(':service-floating')
    implementation project(':offline-lyrics')
    implementation project(':intents')
    implementation project(':shared')

    implementation libs.dagger.core
    kapt libs.dagger.kapt
    implementation libs.dagger.android
    implementation libs.dagger.android_support
    kapt libs.dagger.android_kapt

    implementation libs.x.core
    implementation libs.x.appcompat
    implementation libs.x.browser
    implementation libs.x.preference

    implementation libs.ux.blur_kit
    implementation libs.ux.custom_tabs

    debugImplementation libs.debug.leak_canary
    debugImplementation libs.debug.stetho

    implementation libs.firebase.analytics
    implementation libs.firebase.crashlytics
}

// leave at bottom
apply plugin: 'com.google.gms.google-services'