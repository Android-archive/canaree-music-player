apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "dev.olog.msc"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {

        release {
            minifyEnabled true
            useProguard true
            multiDexEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
//            minifyEnabled true
//            useProguard true
//            multiDexEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
////            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            debuggable false

            minifyEnabled false
            useProguard false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding.enabled = true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries true
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
        }
    }

    lintOptions{
        checkReleaseBuilds false
        disable 'MissingTranslation'
    }

}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // modules
    implementation "com.android.billingclient:billing:$rootProject.billing"

    // data binding
    kapt "com.android.databinding:compiler:$gradle_plugin"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // google architecture components
    implementation "android.arch.lifecycle:runtime:$rootProject.micro_architecture_runtime"
    implementation "android.arch.lifecycle:extensions:$rootProject.micro_architecture"
    implementation "android.arch.lifecycle:common-java8:$rootProject.micro_architecture"
    implementation "android.arch.lifecycle:reactivestreams:$rootProject.micro_architecture"

    // support
    implementation "com.android.support:support-v4:$rootProject.support_library"
    implementation "com.android.support:appcompat-v7:$rootProject.support_library"
    implementation "com.android.support:mediarouter-v7:$rootProject.support_library"
    implementation "com.android.support:support-media-compat:$rootProject.support_library"
    implementation "com.android.support:recyclerview-v7:$rootProject.support_library"
    implementation "com.android.support:cardview-v7:$rootProject.support_library"
    implementation "com.android.support:design:$rootProject.support_library"
    implementation "com.android.support:preference-v7:$rootProject.support_library"
    implementation "com.android.support:preference-v14:$rootProject.support_library"
    implementation "com.android.support:palette-v7:$rootProject.support_library"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraint_layout"

    // db
    implementation "com.squareup.sqlbrite3:sqlbrite:$rootProject.sql_brite"
    implementation "android.arch.persistence.room:runtime:$rootProject.micro_architecture_room"
    kapt "android.arch.persistence.room:compiler:$rootProject.micro_architecture_room"
    implementation "android.arch.persistence.room:rxjava2:$rootProject.micro_architecture_room"

    // di
    implementation "com.google.dagger:dagger:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"

    // reactive streams
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rx_java"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rx_android"
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.rx_kotlin"
    implementation "com.f2prateek.rx.preferences2:rx-preferences:$rootProject.rx_preferences"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rootProject.rx_binding"

    // other
    implementation "com.sothree.slidinguppanel:library:$rootProject.sliding_panel"
    implementation "com.google.android.exoplayer:exoplayer-core:$rootProject.exo_player"
    implementation "com.airbnb.android:lottie:$rootProject.lottie"
    implementation "com.github.bumptech.glide:glide:$rootProject.glide"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glide"
    implementation "com.code-troopers.betterpickers:library:$rootProject.better_pickers"
    implementation "androidx.core:core-ktx:$rootProject.android_ktx"
    implementation "me.xdrop:fuzzywuzzy:$rootProject.fuzzywuzzy"
    implementation "com.google.code.gson:gson:$rootProject.gson"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ok_http"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ok_http"


    // debug
        implementation "com.akaita.java:rxjava2-debug:$rootProject.rxjava_debug"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leak_canary"

    // crashlytics
    implementation("com.crashlytics.sdk.android:crashlytics:$rootProject.crashlytics") {
        transitive = true
    }
    implementation "com.google.firebase:firebase-core:$rootProject.firebase"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation files('libs/jaudiotagger-android-2.2.3.jar')
}

// leave at bottom
apply plugin: 'com.google.gms.google-services'